{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Downloads/candle-pools-burn/src/components/TransactionSettings/index.tsx\";\nimport React, { useState, useContext } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport QuestionHelper from '../QuestionHelper';\nimport { TYPE } from '../../theme';\nimport { AutoColumn } from '../Column';\nimport { RowFixed } from '../Row';\nimport { darken } from 'polished';\nvar DeadlineError;\n\n(function (DeadlineError) {\n  DeadlineError[\"InvalidInput\"] = \"InvalidInput\";\n})(DeadlineError || (DeadlineError = {}));\n\nconst FancyButton = styled.button`\n  color: ${({\n  theme\n}) => theme.text1};\n  align-items: center;\n  height: 2rem;\n  border-radius: 36px;\n  font-size: 1rem;\n  width: auto;\n  min-width: 3.5rem;\n  border: 1px solid ${({\n  theme\n}) => theme.bg3};\n  outline: none;\n  background: ${({\n  theme\n}) => theme.bg1};\n  :hover {\n    border: 1px solid ${({\n  theme\n}) => theme.bg4};\n  }\n  :focus {\n    border: 1px solid ${({\n  theme\n}) => theme.primary1};\n  }\n`;\nconst Input = styled.input`\n  background: ${({\n  theme\n}) => theme.bg1};\n  font-size: 16px;\n  width: auto;\n  outline: none;\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n  color: ${({\n  theme,\n  color\n}) => color === 'red' ? theme.red1 : theme.text1};\n  text-align: right;\n`;\nconst OptionCustom = styled(FancyButton)`\n  height: 2rem;\n  position: relative;\n  padding: 0 0.75rem;\n  flex: 1;\n  border: ${({\n  theme,\n  active,\n  warning\n}) => active && `1px solid ${warning ? theme.red1 : theme.primary1}`};\n  :hover {\n    border: ${({\n  theme,\n  active,\n  warning\n}) => active && `1px solid ${warning ? darken(0.1, theme.red1) : darken(0.1, theme.primary1)}`};\n  }\n\n  input {\n    width: 100%;\n    height: 100%;\n    border: 0px;\n    border-radius: 2rem;\n  }\n`;\nexport default function SlippageTabs({\n  deadline,\n  setDeadline\n}) {\n  const theme = useContext(ThemeContext);\n  const [deadlineInput, setDeadlineInput] = useState('');\n  const deadlineInputIsValid = deadlineInput === '' || (deadline / 60).toString() === deadlineInput;\n  let deadlineError;\n\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput;\n  } else {\n    deadlineError = undefined;\n  }\n\n  function parseCustomDeadline(value) {\n    setDeadlineInput(value);\n\n    try {\n      const valueAsInt = Number.parseInt(value) * 60;\n\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setDeadline(valueAsInt);\n      }\n    } catch {}\n  }\n\n  return /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    fontSize: 14,\n    fontWeight: 400,\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Transaction deadline\"), /*#__PURE__*/React.createElement(QuestionHelper, {\n    text: \"Your transaction will revert if it is pending for more than this long.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(OptionCustom, {\n    style: {\n      width: '80px'\n    },\n    tabIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    color: !!deadlineError ? 'red' : undefined,\n    onBlur: () => {\n      parseCustomDeadline((deadline / 60).toString());\n    },\n    placeholder: (deadline / 60).toString(),\n    value: deadlineInput,\n    onChange: e => parseCustomDeadline(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(TYPE.body, {\n    style: {\n      paddingLeft: '8px'\n    },\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"minutes\"))));\n}","map":{"version":3,"sources":["/Users/safahi/Downloads/candle-pools-burn/src/components/TransactionSettings/index.tsx"],"names":["React","useState","useContext","styled","ThemeContext","QuestionHelper","TYPE","AutoColumn","RowFixed","darken","DeadlineError","FancyButton","button","theme","text1","bg3","bg1","bg4","primary1","Input","input","color","red1","OptionCustom","active","warning","SlippageTabs","deadline","setDeadline","deadlineInput","setDeadlineInput","deadlineInputIsValid","toString","deadlineError","InvalidInput","undefined","parseCustomDeadline","value","valueAsInt","Number","parseInt","isNaN","text2","width","e","target","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport QuestionHelper from '../QuestionHelper'\nimport { TYPE } from '../../theme'\nimport { AutoColumn } from '../Column'\nimport { RowFixed } from '../Row'\n\nimport { darken } from 'polished'\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput'\n}\n\nconst FancyButton = styled.button`\n  color: ${({ theme }) => theme.text1};\n  align-items: center;\n  height: 2rem;\n  border-radius: 36px;\n  font-size: 1rem;\n  width: auto;\n  min-width: 3.5rem;\n  border: 1px solid ${({ theme }) => theme.bg3};\n  outline: none;\n  background: ${({ theme }) => theme.bg1};\n  :hover {\n    border: 1px solid ${({ theme }) => theme.bg4};\n  }\n  :focus {\n    border: 1px solid ${({ theme }) => theme.primary1};\n  }\n`\n\nconst Input = styled.input`\n  background: ${({ theme }) => theme.bg1};\n  font-size: 16px;\n  width: auto;\n  outline: none;\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n  color: ${({ theme, color }) => (color === 'red' ? theme.red1 : theme.text1)};\n  text-align: right;\n`\n\nconst OptionCustom = styled(FancyButton)<{ active?: boolean; warning?: boolean }>`\n  height: 2rem;\n  position: relative;\n  padding: 0 0.75rem;\n  flex: 1;\n  border: ${({ theme, active, warning }) => active && `1px solid ${warning ? theme.red1 : theme.primary1}`};\n  :hover {\n    border: ${({ theme, active, warning }) =>\n      active && `1px solid ${warning ? darken(0.1, theme.red1) : darken(0.1, theme.primary1)}`};\n  }\n\n  input {\n    width: 100%;\n    height: 100%;\n    border: 0px;\n    border-radius: 2rem;\n  }\n`\n\nexport interface SlippageTabsProps {\n  deadline: number\n  setDeadline: (deadline: number) => void\n}\n\nexport default function SlippageTabs({ deadline, setDeadline }: SlippageTabsProps) {\n  const theme = useContext(ThemeContext)\n\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const deadlineInputIsValid = deadlineInput === '' || (deadline / 60).toString() === deadlineInput\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  function parseCustomDeadline(value: string) {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setDeadline(valueAsInt)\n      }\n    } catch {}\n  }\n\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoColumn gap=\"sm\">\n        <RowFixed>\n          <TYPE.black fontSize={14} fontWeight={400} color={theme.text2}>\n            Transaction deadline\n          </TYPE.black>\n          <QuestionHelper text=\"Your transaction will revert if it is pending for more than this long.\" />\n        </RowFixed>\n        <RowFixed>\n          <OptionCustom style={{ width: '80px' }} tabIndex={-1}>\n            <Input\n              color={!!deadlineError ? 'red' : undefined}\n              onBlur={() => {\n                parseCustomDeadline((deadline / 60).toString())\n              }}\n              placeholder={(deadline / 60).toString()}\n              value={deadlineInput}\n              onChange={e => parseCustomDeadline(e.target.value)}\n            />\n          </OptionCustom>\n          <TYPE.body style={{ paddingLeft: '8px' }} fontSize={14}>\n            minutes\n          </TYPE.body>\n        </RowFixed>\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}