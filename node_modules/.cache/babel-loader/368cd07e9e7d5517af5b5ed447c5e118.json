{"ast":null,"code":"import { ChainId, JSBI, Percent, Token, WETH } from '@uniswap/sdk';\nimport { fortmatic, injected, portis, walletconnect, walletlink } from '../connectors';\nexport const ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D';\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'; // a list of tokens by chain\n\nexport const USDC = new Token(ChainId.MAINNET, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', 6, 'USDC', 'USD//C');\nexport const USDT = new Token(ChainId.MAINNET, '0xdAC17F958D2ee523a2206206994597C13D831ec7', 6, 'USDT', 'Tether USD');\nexport const COMP = new Token(ChainId.MAINNET, '0xc00e94Cb662C3520282E6f5717214004A7f26888', 18, 'COMP', 'Compound');\nexport const MKR = new Token(ChainId.MAINNET, '0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2', 18, 'MKR', 'Maker');\nexport const AMPL = new Token(ChainId.MAINNET, '0xD46bA6D942050d489DBd938a2C909A5d5039A161', 9, 'AMPL', 'Ampleforth');\nexport const WBTC = new Token(ChainId.MAINNET, '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599', 8, 'WBTC', 'Wrapped BTC'); // Block time here is slightly higher (~1s) than average in order to avoid ongoing proposals past the displayed time\n\nexport const AVERAGE_BLOCK_TIME_IN_SECS = 14;\nexport const PROPOSAL_LENGTH_IN_BLOCKS = 40320;\nexport const PROPOSAL_LENGTH_IN_SECS = AVERAGE_BLOCK_TIME_IN_SECS * PROPOSAL_LENGTH_IN_BLOCKS;\nexport const GOVERNANCE_ADDRESS = '0x5e4be8Bc9637f0EAA1A755019e06A68ce081D58F';\nexport const TIMELOCK_ADDRESS = '0x1a9C8182C09F50C8318d769245beA52c32BE35BC';\nexport const BURNER_ADDRESS = '0xf05DA838BCE31AA32F776b11a2De1B65AF15DbB6';\nconst CNDL_ADDRESS_KOVAN = '0xDdAdE19B13833d1bF52c1fe1352d41A8DD9fE8C9';\nconst CNDL_ADDRESS_MAINNET = '0xbc138bd20c98186cc0342c8e380953af0cb48ba8';\nexport const UNI = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, CNDL_ADDRESS_MAINNET, 18, 'UNI', 'Uniswap'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, CNDL_ADDRESS_MAINNET, 18, 'UNI', 'Uniswap'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, CNDL_ADDRESS_MAINNET, 18, 'UNI', 'Uniswap'),\n  [ChainId.GÖRLI]: new Token(ChainId.GÖRLI, CNDL_ADDRESS_MAINNET, 18, 'UNI', 'Uniswap'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, CNDL_ADDRESS_KOVAN, 18, 'UNI', 'Uniswap')\n};\nexport const CNDL = {\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, CNDL_ADDRESS_KOVAN, 18, 'CNDL', 'CNDL'),\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, CNDL_ADDRESS_MAINNET, 18, 'CNDL', 'CNDL')\n};\nexport const DAI = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F', 18, 'DAI', 'Dai Stablecoin'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0xC4375B7De8af5a38a93548eb8453a498222C4fF2', 18, 'DAI', 'Dai Stablecoin')\n};\nexport const COMMON_CONTRACT_NAMES = {\n  [CNDL_ADDRESS_MAINNET]: 'CNDL',\n  [GOVERNANCE_ADDRESS]: 'Governance',\n  [TIMELOCK_ADDRESS]: 'Timelock'\n}; // TODO: specify merkle distributor for mainnet\n\nexport const MERKLE_DISTRIBUTOR_ADDRESS = {\n  [ChainId.MAINNET]: '0x090D4613473dEE047c3f2706764f49E0821D256e'\n};\nconst WETH_ONLY = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET]],\n  [ChainId.ROPSTEN]: [WETH[ChainId.ROPSTEN]],\n  [ChainId.RINKEBY]: [WETH[ChainId.RINKEBY]],\n  [ChainId.GÖRLI]: [WETH[ChainId.GÖRLI]],\n  [ChainId.KOVAN]: [WETH[ChainId.KOVAN]]\n}; // used to construct intermediary pairs for trading\n\nexport const BASES_TO_CHECK_TRADES_AGAINST = { ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI[ChainId.MAINNET], USDC, USDT, COMP, MKR]\n};\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n */\n\nexport const CUSTOM_BASES = {\n  [ChainId.MAINNET]: {\n    [AMPL.address]: [DAI[ChainId.MAINNET], WETH[ChainId.MAINNET]]\n  }\n}; // used for display in the default list when adding liquidity\n\nexport const SUGGESTED_BASES = { ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI[ChainId.MAINNET], USDC, USDT]\n}; // used to construct the list of all pairs we consider by default in the frontend\n\nexport const BASES_TO_TRACK_LIQUIDITY_FOR = { ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI[ChainId.MAINNET], USDC, USDT]\n};\nexport const PINNED_PAIRS = {\n  [ChainId.MAINNET]: [[new Token(ChainId.MAINNET, '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643', 8, 'cDAI', 'Compound Dai'), new Token(ChainId.MAINNET, '0x39AA39c021dfbaE8faC545936693aC917d5E7563', 8, 'cUSDC', 'Compound USD Coin')], [USDC, USDT], [DAI[ChainId.MAINNET], USDT]]\n};\nexport const SUPPORTED_WALLETS = {\n  INJECTED: {\n    connector: injected,\n    name: 'Injected',\n    iconName: 'arrow-right.svg',\n    description: 'Injected web3 provider.',\n    href: null,\n    color: '#010101',\n    primary: true\n  },\n  METAMASK: {\n    connector: injected,\n    name: 'MetaMask',\n    iconName: 'metamask.png',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#E8831D'\n  },\n  WALLET_CONNECT: {\n    connector: walletconnect,\n    name: 'WalletConnect',\n    iconName: 'walletConnectIcon.svg',\n    description: 'Connect to Trust Wallet, Rainbow Wallet and more...',\n    href: null,\n    color: '#4196FC',\n    mobile: true\n  },\n  WALLET_LINK: {\n    connector: walletlink,\n    name: 'Coinbase Wallet',\n    iconName: 'coinbaseWalletIcon.svg',\n    description: 'Use Coinbase Wallet app on mobile device',\n    href: null,\n    color: '#315CF5'\n  },\n  COINBASE_LINK: {\n    name: 'Open in Coinbase Wallet',\n    iconName: 'coinbaseWalletIcon.svg',\n    description: 'Open in Coinbase Wallet app.',\n    href: 'https://go.cb-w.com/mtUDhEZPy1',\n    color: '#315CF5',\n    mobile: true,\n    mobileOnly: true\n  },\n  FORTMATIC: {\n    connector: fortmatic,\n    name: 'Fortmatic',\n    iconName: 'fortmaticIcon.png',\n    description: 'Login using Fortmatic hosted wallet',\n    href: null,\n    color: '#6748FF',\n    mobile: true\n  },\n  Portis: {\n    connector: portis,\n    name: 'Portis',\n    iconName: 'portisIcon.png',\n    description: 'Login using Portis hosted wallet',\n    href: null,\n    color: '#4A6C9B',\n    mobile: true\n  }\n};\nexport const NetworkContextName = 'NETWORK'; // default allowed slippage, in bips\n\nexport const INITIAL_ALLOWED_SLIPPAGE = 50; // 20 minutes, denominated in seconds\n\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20; // used for rewards deadlines\n\nexport const BIG_INT_SECONDS_IN_WEEK = JSBI.BigInt(60 * 60 * 24 * 7);\nexport const BIG_INT_ZERO = JSBI.BigInt(0); // one basis point\n\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000));\nexport const BIPS_BASE = JSBI.BigInt(10000); // used for warning states\n\nexport const ALLOWED_PRICE_IMPACT_LOW = new Percent(JSBI.BigInt(100), BIPS_BASE); // 1%\n\nexport const ALLOWED_PRICE_IMPACT_MEDIUM = new Percent(JSBI.BigInt(300), BIPS_BASE); // 3%\n\nexport const ALLOWED_PRICE_IMPACT_HIGH = new Percent(JSBI.BigInt(500), BIPS_BASE); // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\n\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN = new Percent(JSBI.BigInt(1000), BIPS_BASE); // 10%\n// for non expert mode disable swaps above this\n\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT = new Percent(JSBI.BigInt(1500), BIPS_BASE); // 15%\n// used to ensure the user doesn't send so much ETH so they end up with <.01\n\nexport const MIN_ETH = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)); // .01 ETH\n\nexport const BETTER_TRADE_LINK_THRESHOLD = new Percent(JSBI.BigInt(75), JSBI.BigInt(10000));","map":{"version":3,"sources":["/Users/safahi/Downloads/candle-pools-burn/src/constants/index.ts"],"names":["ChainId","JSBI","Percent","Token","WETH","fortmatic","injected","portis","walletconnect","walletlink","ROUTER_ADDRESS","ZERO_ADDRESS","USDC","MAINNET","USDT","COMP","MKR","AMPL","WBTC","AVERAGE_BLOCK_TIME_IN_SECS","PROPOSAL_LENGTH_IN_BLOCKS","PROPOSAL_LENGTH_IN_SECS","GOVERNANCE_ADDRESS","TIMELOCK_ADDRESS","BURNER_ADDRESS","CNDL_ADDRESS_KOVAN","CNDL_ADDRESS_MAINNET","UNI","RINKEBY","ROPSTEN","GÖRLI","KOVAN","CNDL","DAI","COMMON_CONTRACT_NAMES","MERKLE_DISTRIBUTOR_ADDRESS","WETH_ONLY","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","address","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","SUPPORTED_WALLETS","INJECTED","connector","name","iconName","description","href","color","primary","METAMASK","WALLET_CONNECT","mobile","WALLET_LINK","COINBASE_LINK","mobileOnly","FORTMATIC","Portis","NetworkContextName","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_SECONDS_IN_WEEK","BigInt","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_ETH","exponentiate","BETTER_TRADE_LINK_THRESHOLD"],"mappings":"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","sourcesContent":["import { ChainId, JSBI, Percent, Token, WETH } from '@uniswap/sdk'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\n\nimport { fortmatic, injected, portis, walletconnect, walletlink } from '../connectors'\n\nexport const ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\nexport const USDC = new Token(ChainId.MAINNET, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', 6, 'USDC', 'USD//C')\nexport const USDT = new Token(ChainId.MAINNET, '0xdAC17F958D2ee523a2206206994597C13D831ec7', 6, 'USDT', 'Tether USD')\nexport const COMP = new Token(ChainId.MAINNET, '0xc00e94Cb662C3520282E6f5717214004A7f26888', 18, 'COMP', 'Compound')\nexport const MKR = new Token(ChainId.MAINNET, '0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2', 18, 'MKR', 'Maker')\nexport const AMPL = new Token(ChainId.MAINNET, '0xD46bA6D942050d489DBd938a2C909A5d5039A161', 9, 'AMPL', 'Ampleforth')\nexport const WBTC = new Token(ChainId.MAINNET, '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599', 8, 'WBTC', 'Wrapped BTC')\n\n// Block time here is slightly higher (~1s) than average in order to avoid ongoing proposals past the displayed time\nexport const AVERAGE_BLOCK_TIME_IN_SECS = 14\nexport const PROPOSAL_LENGTH_IN_BLOCKS = 40_320\nexport const PROPOSAL_LENGTH_IN_SECS = AVERAGE_BLOCK_TIME_IN_SECS * PROPOSAL_LENGTH_IN_BLOCKS\n\nexport const GOVERNANCE_ADDRESS = '0x5e4be8Bc9637f0EAA1A755019e06A68ce081D58F'\n\nexport const TIMELOCK_ADDRESS = '0x1a9C8182C09F50C8318d769245beA52c32BE35BC'\n\nexport const BURNER_ADDRESS = '0xf05DA838BCE31AA32F776b11a2De1B65AF15DbB6'\n\nconst CNDL_ADDRESS_KOVAN = '0xDdAdE19B13833d1bF52c1fe1352d41A8DD9fE8C9'\nconst CNDL_ADDRESS_MAINNET = '0xbc138bd20c98186cc0342c8e380953af0cb48ba8'\nexport const UNI: { [chainId in ChainId]: Token } = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, CNDL_ADDRESS_MAINNET, 18, 'UNI', 'Uniswap'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, CNDL_ADDRESS_MAINNET, 18, 'UNI', 'Uniswap'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, CNDL_ADDRESS_MAINNET, 18, 'UNI', 'Uniswap'),\n  [ChainId.GÖRLI]: new Token(ChainId.GÖRLI, CNDL_ADDRESS_MAINNET, 18, 'UNI', 'Uniswap'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, CNDL_ADDRESS_KOVAN, 18, 'UNI', 'Uniswap')\n}\nexport const CNDL = {\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, CNDL_ADDRESS_KOVAN, 18, 'CNDL', 'CNDL'),\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, CNDL_ADDRESS_MAINNET, 18, 'CNDL', 'CNDL')\n}\nexport const DAI = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0x6B175474E89094C44Da98b954EedeAC495271d0F',\n    18,\n    'DAI',\n    'Dai Stablecoin'\n  ),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0xC4375B7De8af5a38a93548eb8453a498222C4fF2', 18, 'DAI', 'Dai Stablecoin')\n}\n\nexport const COMMON_CONTRACT_NAMES: { [address: string]: string } = {\n  [CNDL_ADDRESS_MAINNET]: 'CNDL',\n  [GOVERNANCE_ADDRESS]: 'Governance',\n  [TIMELOCK_ADDRESS]: 'Timelock'\n}\n\n// TODO: specify merkle distributor for mainnet\nexport const MERKLE_DISTRIBUTOR_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: '0x090D4613473dEE047c3f2706764f49E0821D256e'\n}\n\nconst WETH_ONLY: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET]],\n  [ChainId.ROPSTEN]: [WETH[ChainId.ROPSTEN]],\n  [ChainId.RINKEBY]: [WETH[ChainId.RINKEBY]],\n  [ChainId.GÖRLI]: [WETH[ChainId.GÖRLI]],\n  [ChainId.KOVAN]: [WETH[ChainId.KOVAN]]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI[ChainId.MAINNET], USDC, USDT, COMP, MKR]\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {\n    [AMPL.address]: [DAI[ChainId.MAINNET], WETH[ChainId.MAINNET]]\n  }\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI[ChainId.MAINNET], USDC, USDT]\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI[ChainId.MAINNET], USDC, USDT]\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [\n      new Token(ChainId.MAINNET, '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643', 8, 'cDAI', 'Compound Dai'),\n      new Token(ChainId.MAINNET, '0x39AA39c021dfbaE8faC545936693aC917d5E7563', 8, 'cUSDC', 'Compound USD Coin')\n    ],\n    [USDC, USDT],\n    [DAI[ChainId.MAINNET], USDT]\n  ]\n}\n\nexport interface WalletInfo {\n  connector?: AbstractConnector\n  name: string\n  iconName: string\n  description: string\n  href: string | null\n  color: string\n  primary?: true\n  mobile?: true\n  mobileOnly?: true\n}\n\nexport const SUPPORTED_WALLETS: { [key: string]: WalletInfo } = {\n  INJECTED: {\n    connector: injected,\n    name: 'Injected',\n    iconName: 'arrow-right.svg',\n    description: 'Injected web3 provider.',\n    href: null,\n    color: '#010101',\n    primary: true\n  },\n  METAMASK: {\n    connector: injected,\n    name: 'MetaMask',\n    iconName: 'metamask.png',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#E8831D'\n  },\n  WALLET_CONNECT: {\n    connector: walletconnect,\n    name: 'WalletConnect',\n    iconName: 'walletConnectIcon.svg',\n    description: 'Connect to Trust Wallet, Rainbow Wallet and more...',\n    href: null,\n    color: '#4196FC',\n    mobile: true\n  },\n  WALLET_LINK: {\n    connector: walletlink,\n    name: 'Coinbase Wallet',\n    iconName: 'coinbaseWalletIcon.svg',\n    description: 'Use Coinbase Wallet app on mobile device',\n    href: null,\n    color: '#315CF5'\n  },\n  COINBASE_LINK: {\n    name: 'Open in Coinbase Wallet',\n    iconName: 'coinbaseWalletIcon.svg',\n    description: 'Open in Coinbase Wallet app.',\n    href: 'https://go.cb-w.com/mtUDhEZPy1',\n    color: '#315CF5',\n    mobile: true,\n    mobileOnly: true\n  },\n  FORTMATIC: {\n    connector: fortmatic,\n    name: 'Fortmatic',\n    iconName: 'fortmaticIcon.png',\n    description: 'Login using Fortmatic hosted wallet',\n    href: null,\n    color: '#6748FF',\n    mobile: true\n  },\n  Portis: {\n    connector: portis,\n    name: 'Portis',\n    iconName: 'portisIcon.png',\n    description: 'Login using Portis hosted wallet',\n    href: null,\n    color: '#4A6C9B',\n    mobile: true\n  }\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\n// used for rewards deadlines\nexport const BIG_INT_SECONDS_IN_WEEK = JSBI.BigInt(60 * 60 * 24 * 7)\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much ETH so they end up with <.01\nexport const MIN_ETH: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 ETH\nexport const BETTER_TRADE_LINK_THRESHOLD = new Percent(JSBI.BigInt(75), JSBI.BigInt(10000))\n"]},"metadata":{},"sourceType":"module"}