{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Downloads/candle-pools-burn/src/components/Settings/index.tsx\";\nimport React, { useRef, useState } from 'react';\nimport { Settings, X } from 'react-feather';\nimport { Text } from 'rebass';\nimport styled from 'styled-components';\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside';\nimport { ApplicationModal } from '../../state/application/actions';\nimport { useModalOpen, useToggleSettingsMenu } from '../../state/application/hooks';\nimport { useExpertModeManager, useUserTransactionTTL } from '../../state/user/hooks';\nimport { ButtonError } from '../Button';\nimport { AutoColumn } from '../Column';\nimport Modal from '../Modal';\nimport { RowBetween } from '../Row';\nimport TransactionSettings from '../TransactionSettings';\nconst StyledMenuIcon = styled(Settings)`\n  height: 20px;\n  width: 20px;\n\n  > * {\n    stroke: ${({\n  theme\n}) => theme.text1};\n  }\n`;\nconst StyledCloseIcon = styled(X)`\n  height: 20px;\n  width: 20px;\n  :hover {\n    cursor: pointer;\n  }\n\n  > * {\n    stroke: ${({\n  theme\n}) => theme.text1};\n  }\n`;\nconst StyledMenuButton = styled.button`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border: none;\n  background-color: transparent;\n  margin: 0;\n  padding: 0;\n  height: 35px;\n  background-color: ${({\n  theme\n}) => theme.bg3};\n\n  padding: 0.15rem 0.5rem;\n  border-radius: 0.5rem;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    outline: none;\n    background-color: ${({\n  theme\n}) => theme.bg4};\n  }\n\n  svg {\n    margin-top: 2px;\n  }\n`;\nconst EmojiWrapper = styled.div`\n  position: absolute;\n  bottom: -6px;\n  right: 0px;\n  font-size: 14px;\n`;\nconst StyledMenu = styled.div`\n  margin-left: 0.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  border: none;\n  text-align: left;\n`;\nconst MenuFlyout = styled.span`\n  min-width: 20.125rem;\n  background-color: ${({\n  theme\n}) => theme.bg2};\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.01);\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  font-size: 1rem;\n  position: absolute;\n  top: 4rem;\n  right: 0rem;\n  z-index: 100;\n\n  ${({\n  theme\n}) => theme.mediaWidth.upToExtraSmall`\n    min-width: 18.125rem;\n    right: -46px;\n  `};\n\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    min-width: 18.125rem;\n    top: -22rem;\n  `};\n`;\nconst Break = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: ${({\n  theme\n}) => theme.bg3};\n`;\nconst ModalContentWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem 0;\n  background-color: ${({\n  theme\n}) => theme.bg2};\n  border-radius: 20px;\n`;\nexport default function SettingsTab() {\n  const node = useRef();\n  const open = useModalOpen(ApplicationModal.SETTINGS);\n  const toggle = useToggleSettingsMenu();\n  const [ttl, setTtl] = useUserTransactionTTL();\n  const [expertMode, toggleExpertMode] = useExpertModeManager(); // show confirmation view before turning on\n\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  useOnClickOutside(node, open ? toggle : undefined);\n  return (\n    /*#__PURE__*/\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/30451\n    React.createElement(StyledMenu, {\n      ref: node,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: showConfirmation,\n      onDismiss: () => setShowConfirmation(false),\n      maxHeight: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ModalContentWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AutoColumn, {\n      gap: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(RowBetween, {\n      style: {\n        padding: '0 2rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Text, {\n      fontWeight: 500,\n      fontSize: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, \"Are you sure?\"), /*#__PURE__*/React.createElement(StyledCloseIcon, {\n      onClick: () => setShowConfirmation(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Break, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(AutoColumn, {\n      gap: \"lg\",\n      style: {\n        padding: '0 2rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontWeight: 500,\n      fontSize: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, \"Expert mode turns off the confirm transaction prompt and allows high slippage trades that often result in bad rates and lost funds.\"), /*#__PURE__*/React.createElement(Text, {\n      fontWeight: 600,\n      fontSize: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, \"ONLY USE THIS MODE IF YOU KNOW WHAT YOU ARE DOING.\"), /*#__PURE__*/React.createElement(ButtonError, {\n      error: true,\n      padding: '12px',\n      onClick: () => {\n        if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n          toggleExpertMode();\n          setShowConfirmation(false);\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontSize: 20,\n      fontWeight: 500,\n      id: \"confirm-expert-mode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, \"Turn On Expert Mode\")))))), /*#__PURE__*/React.createElement(StyledMenuButton, {\n      onClick: toggle,\n      id: \"open-settings-dialog-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(StyledMenuIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }), expertMode ? /*#__PURE__*/React.createElement(EmojiWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"wizard-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, \"\\uD83E\\uDDD9\")) : null), open && /*#__PURE__*/React.createElement(MenuFlyout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AutoColumn, {\n      gap: \"md\",\n      style: {\n        padding: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontWeight: 600,\n      fontSize: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, \"Transaction Settings\"), /*#__PURE__*/React.createElement(TransactionSettings, {\n      deadline: ttl,\n      setDeadline: setTtl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }))))\n  );\n}","map":{"version":3,"sources":["/Users/safahi/Downloads/candle-pools-burn/src/components/Settings/index.tsx"],"names":["React","useRef","useState","Settings","X","Text","styled","useOnClickOutside","ApplicationModal","useModalOpen","useToggleSettingsMenu","useExpertModeManager","useUserTransactionTTL","ButtonError","AutoColumn","Modal","RowBetween","TransactionSettings","StyledMenuIcon","theme","text1","StyledCloseIcon","StyledMenuButton","button","bg3","bg4","EmojiWrapper","div","StyledMenu","MenuFlyout","span","bg2","mediaWidth","upToExtraSmall","upToMedium","Break","ModalContentWrapper","SettingsTab","node","open","SETTINGS","toggle","ttl","setTtl","expertMode","toggleExpertMode","showConfirmation","setShowConfirmation","undefined","padding","window","prompt"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\nimport { Settings, X } from 'react-feather'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\nimport { ApplicationModal } from '../../state/application/actions'\nimport { useModalOpen, useToggleSettingsMenu } from '../../state/application/hooks'\nimport { useExpertModeManager, useUserTransactionTTL } from '../../state/user/hooks'\nimport { ButtonError } from '../Button'\nimport { AutoColumn } from '../Column'\nimport Modal from '../Modal'\nimport { RowBetween } from '../Row'\nimport TransactionSettings from '../TransactionSettings'\n\nconst StyledMenuIcon = styled(Settings)`\n  height: 20px;\n  width: 20px;\n\n  > * {\n    stroke: ${({ theme }) => theme.text1};\n  }\n`\n\nconst StyledCloseIcon = styled(X)`\n  height: 20px;\n  width: 20px;\n  :hover {\n    cursor: pointer;\n  }\n\n  > * {\n    stroke: ${({ theme }) => theme.text1};\n  }\n`\n\nconst StyledMenuButton = styled.button`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border: none;\n  background-color: transparent;\n  margin: 0;\n  padding: 0;\n  height: 35px;\n  background-color: ${({ theme }) => theme.bg3};\n\n  padding: 0.15rem 0.5rem;\n  border-radius: 0.5rem;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    outline: none;\n    background-color: ${({ theme }) => theme.bg4};\n  }\n\n  svg {\n    margin-top: 2px;\n  }\n`\nconst EmojiWrapper = styled.div`\n  position: absolute;\n  bottom: -6px;\n  right: 0px;\n  font-size: 14px;\n`\n\nconst StyledMenu = styled.div`\n  margin-left: 0.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  border: none;\n  text-align: left;\n`\n\nconst MenuFlyout = styled.span`\n  min-width: 20.125rem;\n  background-color: ${({ theme }) => theme.bg2};\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.01);\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  font-size: 1rem;\n  position: absolute;\n  top: 4rem;\n  right: 0rem;\n  z-index: 100;\n\n  ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n    min-width: 18.125rem;\n    right: -46px;\n  `};\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    min-width: 18.125rem;\n    top: -22rem;\n  `};\n`\n\nconst Break = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: ${({ theme }) => theme.bg3};\n`\n\nconst ModalContentWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem 0;\n  background-color: ${({ theme }) => theme.bg2};\n  border-radius: 20px;\n`\n\nexport default function SettingsTab() {\n  const node = useRef<HTMLDivElement>()\n  const open = useModalOpen(ApplicationModal.SETTINGS)\n  const toggle = useToggleSettingsMenu()\n\n  const [ttl, setTtl] = useUserTransactionTTL()\n\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n\n  // show confirmation view before turning on\n  const [showConfirmation, setShowConfirmation] = useState(false)\n\n  useOnClickOutside(node, open ? toggle : undefined)\n\n  return (\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/30451\n    <StyledMenu ref={node as any}>\n      <Modal isOpen={showConfirmation} onDismiss={() => setShowConfirmation(false)} maxHeight={100}>\n        <ModalContentWrapper>\n          <AutoColumn gap=\"lg\">\n            <RowBetween style={{ padding: '0 2rem' }}>\n              <div />\n              <Text fontWeight={500} fontSize={20}>\n                Are you sure?\n              </Text>\n              <StyledCloseIcon onClick={() => setShowConfirmation(false)} />\n            </RowBetween>\n            <Break />\n            <AutoColumn gap=\"lg\" style={{ padding: '0 2rem' }}>\n              <Text fontWeight={500} fontSize={20}>\n                Expert mode turns off the confirm transaction prompt and allows high slippage trades that often result\n                in bad rates and lost funds.\n              </Text>\n              <Text fontWeight={600} fontSize={20}>\n                ONLY USE THIS MODE IF YOU KNOW WHAT YOU ARE DOING.\n              </Text>\n              <ButtonError\n                error={true}\n                padding={'12px'}\n                onClick={() => {\n                  if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n                    toggleExpertMode()\n                    setShowConfirmation(false)\n                  }\n                }}\n              >\n                <Text fontSize={20} fontWeight={500} id=\"confirm-expert-mode\">\n                  Turn On Expert Mode\n                </Text>\n              </ButtonError>\n            </AutoColumn>\n          </AutoColumn>\n        </ModalContentWrapper>\n      </Modal>\n      <StyledMenuButton onClick={toggle} id=\"open-settings-dialog-button\">\n        <StyledMenuIcon />\n        {expertMode ? (\n          <EmojiWrapper>\n            <span role=\"img\" aria-label=\"wizard-icon\">\n              🧙\n            </span>\n          </EmojiWrapper>\n        ) : null}\n      </StyledMenuButton>\n      {open && (\n        <MenuFlyout>\n          <AutoColumn gap=\"md\" style={{ padding: '1rem' }}>\n            <Text fontWeight={600} fontSize={14}>\n              Transaction Settings\n            </Text>\n            <TransactionSettings deadline={ttl} setDeadline={setTtl} />\n          </AutoColumn>\n        </MenuFlyout>\n      )}\n    </StyledMenu>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}